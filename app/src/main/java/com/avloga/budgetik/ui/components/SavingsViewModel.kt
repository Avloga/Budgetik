package com.avloga.budgetik.ui.components

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.avloga.budgetik.data.firebase.SavingsFirebaseManager
import com.avloga.budgetik.data.model.SavingsBank
import com.avloga.budgetik.data.model.SavingsData
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.flow.asStateFlow
import kotlinx.coroutines.launch

class SavingsViewModel : ViewModel() {
    private val savingsManager = SavingsFirebaseManager()
    
    private val _savingsData = MutableStateFlow<SavingsData?>(null)
    val savingsData: StateFlow<SavingsData?> = _savingsData.asStateFlow()
    
    private val _isLoading = MutableStateFlow(false)
    val isLoading: StateFlow<Boolean> = _isLoading.asStateFlow()
    
    private val _error = MutableStateFlow<String?>(null)
    val error: StateFlow<String?> = _error.asStateFlow()
    
    private val _showAddBankDialog = MutableStateFlow(false)
    val showAddBankDialog: StateFlow<Boolean> = _showAddBankDialog.asStateFlow()
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    fun loadUserSavings(userId: String) {
        viewModelScope.launch {
            println("üîÑ ViewModel: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: $userId")
            _isLoading.value = true
            _error.value = null
            
            try {
                val data = savingsManager.getSavingsStats(userId)
                println("üìä ViewModel: –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ: totalSavings=${data?.totalSavings}, banks=${data?.banks?.size}")
                _savingsData.value = data
            } catch (e: Exception) {
                println("‚ùå ViewModel: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${e.message}")
                e.printStackTrace()
                _error.value = "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${e.message}"
            } finally {
                _isLoading.value = false
                println("‚úÖ ViewModel: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            }
        }
    }
    
    // –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –±–∞–Ω–∫—É
    fun createSavingsBank(
        userId: String,
        name: String,
        targetAmount: Double,
        description: String = "",
        category: String = "–ó–∞–≥–∞–ª—å–Ω–µ"
    ) {
        viewModelScope.launch {
            _isLoading.value = true
            _error.value = null
            
            val request = com.avloga.budgetik.data.model.CreateSavingsBankRequest(
                name = name,
                targetAmount = targetAmount,
                description = description,
                category = category
            )
            
            savingsManager.createSavingsBank(
                userId = userId,
                request = request,
                onSuccess = {
                    loadUserSavings(userId) // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ
                    _showAddBankDialog.value = false
                },
                onFailure = { error ->
                    _error.value = error
                }
            )
            
            _isLoading.value = false
        }
    }
    
    // –î–æ–¥–∞—Ç–∏ —Å—É–º—É –¥–æ –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è
    fun addToSavings(
        bankId: String,
        amount: Double,
        userId: String
    ) {
        viewModelScope.launch {
            _isLoading.value = true
            _error.value = null
            
            savingsManager.addToSavings(
                bankId = bankId,
                amount = amount,
                onSuccess = {
                    loadUserSavings(userId) // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ
                },
                onFailure = { error ->
                    _error.value = error
                }
            )
            
            _isLoading.value = false
        }
    }
    
    // –ó–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
    fun populateWithTestData(userId: String) {
        viewModelScope.launch {
            println("üß™ ViewModel: –ü–æ—á–∏–Ω–∞—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è userId: $userId")
            _isLoading.value = true
            _error.value = null
            
            try {
                savingsManager.populateWithTestData(userId)
                println("‚úÖ ViewModel: –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ, –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—é...")
                loadUserSavings(userId) // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ
            } catch (e: Exception) {
                println("‚ùå ViewModel: –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö: ${e.message}")
                e.printStackTrace()
                _error.value = "–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏: ${e.message}"
            } finally {
                _isLoading.value = false
                println("üèÅ ViewModel: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            }
        }
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç–∏/–ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±–∞–Ω–∫–∏
    fun toggleAddBankDialog() {
        _showAddBankDialog.value = !_showAddBankDialog.value
    }
    
    // –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É
    fun clearError() {
        _error.value = null
    }
    
    // –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –Ω–∞–∫–æ–ø–∏—á–µ–Ω—å
    fun getTotalSavings(): Double {
        return _savingsData.value?.totalSavings ?: 0.0
    }
    
    // –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –±–∞–Ω–æ–∫
    fun getBanks(): List<SavingsBank> {
        return _savingsData.value?.banks ?: emptyList()
    }
}
