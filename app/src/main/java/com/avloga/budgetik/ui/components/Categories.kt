package com.avloga.budgetik.ui.components

import androidx.compose.ui.graphics.Color
import com.avloga.budgetik.ui.theme.*

enum class CategoryKind { EXPENSE, INCOME }

data class AppCategory(
    val name: String,
    val emoji: String,
    val color: Color,
    val kind: CategoryKind
)

object Categories {
    // –Ñ–¥–∏–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≤–∏—Ç—Ä–∞—Ç
    val expenseCategories: List<AppCategory> = listOf(
        AppCategory("–ó–≤'—è–∑–æ–∫", "üìû", CategoryPink, CategoryKind.EXPENSE),
        AppCategory("–á–∂–∞", "üçΩÔ∏è", CategoryGreen, CategoryKind.EXPENSE),
        AppCategory("–ö–∞—Ñ–µ", "‚òï", CategoryOrange, CategoryKind.EXPENSE),
        AppCategory("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "üöå", CategoryBlue, CategoryKind.EXPENSE),
        AppCategory("–¢–µ—Ö–Ω—ñ–∫–∞", "üíª", CategoryYellow, CategoryKind.EXPENSE),
        AppCategory("–ì—ñ–≥—ñ—î–Ω–∞", "üß¥", CategoryCyan, CategoryKind.EXPENSE),
        AppCategory("–£–ª—é–±–ª–µ–Ω—Ü—ñ", "üê±", CategoryTeal, CategoryKind.EXPENSE),
        AppCategory("–û–¥—è–≥", "üëï", CategoryPurple, CategoryKind.EXPENSE),
        AppCategory("–ü–æ–¥–∞—Ä—É–Ω–∫–∏", "üéÅ", CategoryRed, CategoryKind.EXPENSE),
        AppCategory("–°–ø–æ—Ä—Ç", "‚öΩ", CategoryLime, CategoryKind.EXPENSE),
        AppCategory("–ó–¥–æ—Ä–æ–≤'—è", "üè•", CategoryDeepOrange, CategoryKind.EXPENSE),
        AppCategory("–Ü–≥—Ä–∏", "üéÆ", CategoryIndigo, CategoryKind.EXPENSE),
        AppCategory("–†–æ–∑–≤–∞–≥–∏", "üç∫", CategoryAmber, CategoryKind.EXPENSE),
        AppCategory("–ñ–∏—Ç–ª–æ", "üè†", CategoryBrown, CategoryKind.EXPENSE)
    )

    // –Ñ–¥–∏–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–æ—Ö–æ–¥—ñ–≤
    val incomeCategories: List<AppCategory> = listOf(
        AppCategory("–ó–∞—Ä–ø–ª–∞—Ç–∞", "üí∞", IncomeGreen, CategoryKind.INCOME),
        AppCategory("–ü–æ–¥–∞—Ä—É–Ω–æ–∫", "üéÅ", CategoryPurple, CategoryKind.INCOME),
        AppCategory("–ó–∞–æ—â–∞–¥–∂–µ–Ω–Ω—è", "üè¶", CategoryBlue, CategoryKind.INCOME)
    )

    // –ü–æ—à—É–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞ –Ω–∞–∑–≤–æ—é (–Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É)
    private val nameToCategory: Map<String, AppCategory> =
        (expenseCategories + incomeCategories).associateBy { it.name.lowercase() }

    fun findByName(name: String?): AppCategory? = name?.let { nameToCategory[it.lowercase()] }

    // –Ü–º–µ–Ω–∞ –¥–ª—è –≤–∏–ø–∞–¥–∞—é—á–∏—Ö —Å–ø–∏—Å–∫—ñ–≤
    fun expenseNames(): List<String> = expenseCategories.map { it.name }
    fun incomeNames(): List<String> = incomeCategories.map { it.name }

    // –ü–æ–±—É–¥–æ–≤–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≥—Ä—ñ–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ
    fun toCategoryItems(): List<CategoryItem> = expenseCategories.map {
        CategoryItem(text = it.emoji, color = it.color, contentDescription = it.name)
    }
}


